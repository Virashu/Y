"""
This type stub file was generated by pyright.
"""

from collections.abc import Callable, Iterable, Iterator, Sequence
from typing import Any
from typing_extensions import Self, TypeAlias
from wtforms.fields.core import Field, _Filter, _FormT, _Validator, _Widget
from wtforms.form import BaseForm
from wtforms.meta import DefaultMeta, _SupportsGettextAndNgettext

_Choice: TypeAlias = ...
_GroupedChoices: TypeAlias = ...
_FullChoice: TypeAlias = ...
_FullGroupedChoices: TypeAlias = ...
_Option: TypeAlias = ...

class SelectFieldBase(Field):
    option_widget: _Widget[_Option]
    def __init__(
        self,
        label: str | None = ...,
        validators: tuple[_Validator[_FormT, Self], ...] | list[Any] | None = ...,
        option_widget: _Widget[_Option] | None = ...,
        *,
        filters: Sequence[_Filter] = ...,
        description: str = ...,
        id: str | None = ...,
        default: object | None = ...,
        widget: _Widget[Self] | None = ...,
        render_kw: dict[str, Any] | None = ...,
        name: str | None = ...,
        _form: BaseForm | None = ...,
        _prefix: str = ...,
        _translations: _SupportsGettextAndNgettext | None = ...,
        _meta: DefaultMeta | None = ...
    ) -> None: ...
    def iter_choices(self) -> Iterator[_FullChoice]: ...
    def has_groups(self) -> bool: ...
    def iter_groups(self) -> Iterator[_FullGroupedChoices]: ...
    def __iter__(self) -> Iterator[_Option]: ...

    class _Option(Field):
        checked: bool
        ...

class SelectField(SelectFieldBase):
    coerce: Callable[[Any], Any]
    choices: list[_Choice] | _GroupedChoices
    validate_choice: bool
    def __init__(
        self,
        label: str | None = ...,
        validators: tuple[_Validator[_FormT, Self], ...] | list[Any] | None = ...,
        coerce: Callable[[Any], Any] = ...,
        choices: Iterable[_Choice]
        | _GroupedChoices
        | Callable[[], Iterable[_Choice] | _GroupedChoices]
        | None = ...,
        validate_choice: bool = ...,
        *,
        filters: Sequence[_Filter] = ...,
        description: str = ...,
        id: str | None = ...,
        default: object | None = ...,
        widget: _Widget[Self] | None = ...,
        option_widget: _Widget[_Option] | None = ...,
        render_kw: dict[str, Any] | None = ...,
        name: str | None = ...,
        _form: BaseForm | None = ...,
        _prefix: str = ...,
        _translations: _SupportsGettextAndNgettext | None = ...,
        _meta: DefaultMeta | None = ...
    ) -> None: ...
    def iter_choices(self) -> Iterator[_FullChoice]: ...
    def has_groups(self) -> bool: ...
    def iter_groups(self) -> Iterator[_FullGroupedChoices]: ...

class SelectMultipleField(SelectField):
    data: list[Any] | None
    ...

class RadioField(SelectField): ...
