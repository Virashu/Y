"""
This type stub file was generated by pyright.
"""

from _typeshed import SupportsItems
from collections.abc import Iterable, Iterator, Mapping, Sequence
from typing import Any, ClassVar, Protocol, overload
from typing_extensions import TypeAlias
from wtforms.fields.core import Field, UnboundField
from wtforms.meta import DefaultMeta, _MultiDictLike

_FormErrors: TypeAlias = ...

class _UnboundFields(Protocol):
    @overload
    def __get__(
        self, obj: None, owner: type[object] | None = ..., /
    ) -> list[tuple[str, UnboundField[Any]]] | None: ...
    @overload
    def __get__(
        self, obj: object, owner: type[object] | None = ..., /
    ) -> list[tuple[str, UnboundField[Any]]]: ...

class BaseForm:
    meta: DefaultMeta
    form_errors: list[str]
    _fields: dict[str, Field]
    def __init__(
        self,
        fields: SupportsItems[str, UnboundField[Any]]
        | Iterable[tuple[str, UnboundField[Any]]],
        prefix: str = ...,
        meta: DefaultMeta = ...,
    ) -> None: ...
    def __iter__(self) -> Iterator[Field]: ...
    def __contains__(self, name: str) -> bool: ...
    def __getitem__(self, name: str) -> Field: ...
    def __setitem__(self, name: str, value: UnboundField[Any]) -> None: ...
    def __delitem__(self, name: str) -> None: ...
    def populate_obj(self, obj: object) -> None: ...
    def process(
        self,
        formdata: _MultiDictLike | None = ...,
        obj: object | None = ...,
        data: Mapping[str, Any] | None = ...,
        extra_filters: Mapping[str, Sequence[Any]] | None = ...,
        **kwargs: object,
    ) -> None: ...
    def validate(
        self, extra_validators: Mapping[str, Sequence[Any]] | None = ...
    ) -> bool: ...
    @property
    def data(self) -> dict[str, Any]: ...
    @property
    def errors(self) -> _FormErrors: ...

class FormMeta(type):
    def __init__(
        cls, name: str, bases: Sequence[type[object]], attrs: Mapping[str, Any]
    ) -> None: ...
    def __call__(cls, *args: Any, **kwargs: Any) -> Any: ...
    def __setattr__(cls, name: str, value: object) -> None: ...
    def __delattr__(cls, name: str) -> None: ...

class Form(BaseForm, metaclass=FormMeta):
    Meta: ClassVar[type[Any]]
    _unbound_fields: _UnboundFields
    def __init__(
        self,
        formdata: _MultiDictLike | None = ...,
        obj: object | None = ...,
        prefix: str = ...,
        data: Mapping[str, Any] | None = ...,
        meta: Mapping[str, Any] | None = ...,
        *,
        extra_filters: Mapping[str, Sequence[Any]] | None = ...,
        **kwargs: object,
    ) -> None: ...
    def __setitem__(self, name: str, value: None) -> None: ...
    def __delitem__(self, name: str) -> None: ...
    def __delattr__(self, name: str) -> None: ...
