"""
This type stub file was generated by pyright.
"""

from typing import Callable, Sequence, Any
from markupsafe import Markup
from werkzeug.datastructures import CombinedMultiDict, ImmutableMultiDict
from werkzeug.utils import cached_property
from wtforms import Form
from wtforms.meta import DefaultMeta
from .csrf import _FlaskFormCSRF

SUBMIT_METHODS = ...
_Auto = ...

class FlaskForm(Form):
    """Flask-specific subclass of WTForms :class:`~wtforms.form.Form`.

    If ``formdata`` is not specified, this will use :attr:`flask.request.form`
    and :attr:`flask.request.files`.  Explicitly pass ``formdata=None`` to
    prevent this.
    """

    class Meta(DefaultMeta):
        csrf_class = _FlaskFormCSRF
        csrf_context = ...
        @cached_property
        def csrf(self): ...
        @cached_property
        def csrf_secret(self): ...
        @cached_property
        def csrf_field_name(self): ...
        @cached_property
        def csrf_time_limit(self): ...
        def wrap_formdata(
            self, form, formdata
        ) -> (
            CombinedMultiDict[Any, Any]
            | ImmutableMultiDict[str, str]
            | ImmutableMultiDict[Any, Any]
            | None
        ): ...
        def get_translations(
            self, form
        ) -> _SupportsGettextAndNgettext | Translations | None: ...

    def __init__(self, formdata=..., **kwargs) -> None: ...
    def is_submitted(self) -> bool:
        """Consider the form submitted if there is an active request and
        the method is ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.
        """
        ...

    def validate_on_submit(
        self, extra_validators: dict[str, Sequence[Callable[..., bool]]] = ...
    ) -> bool:
        """Call :meth:`validate` only if the form is submitted.
        This is a shortcut for ``form.is_submitted() and form.validate()``.
        """
        ...

    def hidden_tag(self, *fields: str) -> Markup:
        """Render the form's hidden fields in one call.

        A field is considered hidden if it uses the
        :class:`~wtforms.widgets.HiddenInput` widget.

        If ``fields`` are given, only render the given fields that
        are hidden.  If a string is passed, render the field with that
        name if it exists.

        .. versionchanged:: 0.13

           No longer wraps inputs in hidden div.
           This is valid HTML 5.

        .. versionchanged:: 0.13

           Skip passed fields that aren't hidden.
           Skip passed names that don't exist.
        """
        ...
